#!/bin/bash

# Đọc cấu hình từ file my-config.cnf trước
MY_CONFIG="/etc/automysqlbackup/my-config.cnf"
if [ -f "$MY_CONFIG" ]; then
    source "$MY_CONFIG"
fi

# Sau đó đọc cấu hình chính từ main.cnf
CONFIG_FILE="/etc/automysqlbackup/conf.d/main.cnf"
source "$CONFIG_FILE"

if [ ! -f "$CONFIG_FILE" ]; then
  echo "Configuration file not found: $CONFIG_FILE"
  exit 1
fi

source "$CONFIG_FILE"

# Định nghĩa các biến phụ thuộc
DATE=$(date +%F)
DAY_OF_WEEK=$(date +%u)  # Ngày trong tuần (1 = Thứ 2, 7 = Chủ nhật)
LOG_FILE="$BACKUP_DIR/backup_log_$DATE.log"

export MYSQL_PWD=$MYSQL_PASSWORD

# Lấy danh sách database cần sao lưu
DATABASES=$(mysql -u$MYSQL_USER -e "SHOW DATABASES;" | grep -Ev "(Database|$CONFIG_DB_EXCLUDE)")

if [ -z "$DATABASES" ]; then
  echo "$(date +'%Y-%m-%d %H:%M:%S') - No databases found to backup." >>"$LOG_FILE"
  exit 1
fi

# Tạo thư mục và ghi log
for dir in daily weekly monthly; do
  mkdir -p "$BACKUP_DIR/$dir" 2>>"$LOG_FILE" || {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - Failed to create $dir backup directory" >>"$LOG_FILE"
    exit 1
  }
done

sudo chown -R root:root $BACKUP_DIR*
sudo find $BACKUP_DIR* -type f -exec chmod 644 {} \;
sudo find $BACKUP_DIR* -type d -exec chmod 755 {} \;

SUCCESSFUL_BACKUPS=""
FAILED_BACKUPS=""

# Tạo danh sách file đính kèm để gửi mail
ATTACHMENT_FILES=""

# Hàm sao lưu
backup_databases() {
  local backup_dir=$1  # Thư mục sao lưu (daily, weekly, monthly)
  local backup_type=$2 # Loại sao lưu (Daily, Weekly, Monthly)

  echo "Database Backup on $(date +'%Y-%m-%d') - Initiating..."
  echo ""
  echo "" >>"$LOG_FILE"
  echo "=== Auto Backup SQL  $(date +'%Y-%m-%d') ======================================" >>"$LOG_FILE"

  for DB in $DATABASES; do
    BACKUP_FILE="$backup_dir/$DATE"_"$DB.sql.gz"
    if mysqldump -u$MYSQL_USER $DB | gzip >"$BACKUP_FILE"; then
      # Kiểm tra kích thước file để phát hiện lỗi
      if [ -s "$BACKUP_FILE" ]; then
        SUCCESSFUL_BACKUPS="$SUCCESSFUL_BACKUPS\n[$backup_type] $BACKUP_FILE"
        ATTACHMENT_FILES="$ATTACHMENT_FILES $BACKUP_FILE"  # Thêm vào danh sách các tệp đính kèm
        echo "$(date +'%H:%M:%S') - [$backup_type] Backup completed: $DB -> $BACKUP_FILE"
        echo "$(date +'%Y-%m-%d %H:%M:%S') - [$backup_type] Backup completed: $DB -> $BACKUP_FILE" >>"$LOG_FILE"
      else
        FAILED_BACKUPS="$FAILED_BACKUPS\n[$backup_type] $DB - Empty backup file"
        echo "$(date +'%Y-%m-%d %H:%M:%S') - [$backup_type] Backup failed for database: $DB (empty file)" >>"$LOG_FILE"
        rm -f "$BACKUP_FILE"
      fi
    else
      FAILED_BACKUPS="$FAILED_BACKUPS\n[$backup_type] $DB - Backup failed"
      echo "$(date +'%Y-%m-%d %H:%M:%S') - [$backup_type] Backup failed for database: $DB" >>"$LOG_FILE"
    fi
  done
}

# Sao lưu hàng ngày
backup_databases "$BACKUP_DIR/daily" "Daily"

# Sao lưu hàng tuần (chỉ vào thứ 2)
if [ "$DAY_OF_WEEK" -eq 1 ]; then
  backup_databases "$BACKUP_DIR/weekly" "Weekly"
fi

# Sao lưu hàng tháng (chỉ vào ngày 01)
if [ "$DAY_OF_WEEK" -eq 1 ] && [ "$(date +%d)" -eq 01 ]; then
  backup_databases "$BACKUP_DIR/monthly" "Monthly"
fi


# Hàm xử lý theo ngày, tuần, tháng
cleanup_old_backups() {
  local dir=$1
  local days=$2

  # Lấy danh sách các tệp có ngày chỉnh sửa lớn hơn $days
  local old_files=$(find "$dir" -type f -mtime +$days)

  if [ -n "$old_files" ]; then
    echo "" >> "$LOG_FILE"
    echo "$old_files" >> "$LOG_FILE"
    find "$dir" -type f -mtime +$days -exec rm -v {} \;
  else
    echo "No old data found to clean in $dir."
    echo "$(date +'%Y-%m-%d %H:%M:%S') - No old data found to clean in $dir." >> "$LOG_FILE"
  fi
}

# Hàm xoá bản sao lưu cũ theo ngày, tuần, tháng
cleanup_old_backups_by_time() {
  local dir=$1
  local days=$2

  echo ""
  echo "Cleanup old files: $dir (older than $days days)"

  echo "" >> "$LOG_FILE"
  echo "Cleanup old files: $dir (older than $days days)" >> "$LOG_FILE"

  cleanup_old_backups "$dir" "$days"
}

# Cleanup files older than 30 days in daily backup
cleanup_old_backups_by_time "$BACKUP_DIR/daily" 30

# Cleanup files older than 84 days in weekly backup
cleanup_old_backups_by_time "$BACKUP_DIR/weekly" 84

# Cleanup files older than 365 days in monthly backup
cleanup_old_backups_by_time "$BACKUP_DIR/monthly" 365


echo ""
echo "Log written to: $LOG_FILE"

# Tóm tắt kết quả
TOTAL_DATABASES=$(echo "$DATABASES" | wc -l)
TOTAL_SUCCESS=$(echo -e "$SUCCESSFUL_BACKUPS" | grep -c ".sql.gz")
TOTAL_FAILED=$(echo -e "$FAILED_BACKUPS" | grep -c "Backup failed")

echo -e "\nSummary:" >>"$LOG_FILE"
echo -e "$(date +'%Y-%m-%d %H:%M:%S') - Total databases: $TOTAL_DATABASES" >>"$LOG_FILE"
echo -e "$(date +'%Y-%m-%d %H:%M:%S') - Successful backups: $TOTAL_SUCCESS" >>"$LOG_FILE"
echo -e "$(date +'%Y-%m-%d %H:%M:%S') - Failed backups: $TOTAL_FAILED" >>"$LOG_FILE"

# Gửi email hoặc đính kèm ATTACHMENT_FILES
CONFIG_MAIL="/etc/automysqlbackup/sendmail"
if [ -f "$CONFIG_MAIL" ]; then
  source "$CONFIG_MAIL"
else
  echo "$(date +'%Y-%m-%d %H:%M:%S') - Mail not sent because the configuration file could not be found.: $CONFIG_MAIL." >>"$LOG_FILE"
fi

